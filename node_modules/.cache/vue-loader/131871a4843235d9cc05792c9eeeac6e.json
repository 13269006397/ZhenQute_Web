{"remainingRequest":"E:\\Vuesax\\VueJs版本\\vuesax-admin-v3.2\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Vuesax\\VueJs版本\\vuesax-admin-v3.2\\src\\views\\apps\\chat\\Chat.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"E:\\Vuesax\\VueJs版本\\vuesax-admin-v3.2\\src\\views\\apps\\chat\\Chat.vue","mtime":1627437567750},{"path":"E:\\Vuesax\\VueJs版本\\vuesax-admin-v3.2\\node_modules\\css-loader\\index.js","mtime":1625188671762},{"path":"E:\\Vuesax\\VueJs版本\\vuesax-admin-v3.2\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1625188673042},{"path":"E:\\Vuesax\\VueJs版本\\vuesax-admin-v3.2\\node_modules\\postcss-loader\\lib\\index.js","mtime":1625188672852},{"path":"E:\\Vuesax\\VueJs版本\\vuesax-admin-v3.2\\node_modules\\sass-loader\\lib\\loader.js","mtime":1625188735980},{"path":"E:\\Vuesax\\VueJs版本\\vuesax-admin-v3.2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1625188725761},{"path":"E:\\Vuesax\\VueJs版本\\vuesax-admin-v3.2\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1625188673042}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"@/assets/scss/vuesax/apps/chat.scss\";\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+QA","file":"Chat.vue","sourceRoot":"src/views/apps/chat","sourcesContent":["<!-- =========================================================================================\n    File Name: Chat.vue\n    Description: Chat Application - Stay connected\n========================================================================================== -->\n\n\n<template>\n    <div id=\"chat-app\" class=\"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\">\n        <vs-sidebar class=\"items-no-padding\" parent=\"#chat-app\" :click-not-close=\"clickNotClose\" :hidden-background=\"clickNotClose\" v-model=\"isChatSidebarActive\" id=\"chat-list-sidebar\">\n\n            <!-- 点击头像后 个人简介 -->\n            <!-- USER PROFILE SIDEBAR -->\n            <user-profile :active=\"activeProfileSidebar\" :userId=\"userProfileId\" class=\"user-profile-container\" @closeProfileSidebar=\"closeProfileSidebar\"></user-profile>\n\n            <!-- 头像区 搜索区 -->\n            <div class=\"chat__profile-search flex p-4\">\n                <div class=\"relative inline-flex\">\n                    <vs-avatar class=\"m-0 border-2 border-solid border-white\" :src=loginInfo.avatar size=\"40px\" @click=\"showProfileSidebar(activeUserId)\" />\n                    <div class=\"h-3 w-3 border-white border border-solid rounded-full absolute right-0 bottom-0\" :class=\"'bg-' + getStatusColor(true)\"></div>\n                </div>\n                <vs-input icon=\"icon-search\" icon-pack=\"feather\" class=\"w-full mx-5 input-rounded-full no-icon-border\" placeholder=\"输入联系人\" v-model=\"searchQuery\"/>\n            </div>\n\n            <vs-divider class=\"d-theme-border-grey-light m-0\" />\n            <VuePerfectScrollbar class=\"chat-scroll-area pt-4\" :settings=\"settings\">\n\n                <!-- 当前聊天区 -->\n                <!-- ACTIVE CHATS LIST -->\n                <div class=\"chat__chats-list mb-8\">\n                    <h3 class=\"text-primary mb-5 px-4\">聊天</h3>\n                    <ul class=\"chat__active-chats bordered-items\">\n                        <li class=\"cursor-pointer\" v-for=\"(contact, index) in sorted\" :key=\"index\" @click=\"updateActiveChatUser(contact.id)\">\n                                                                            <!--最后消息时间                                  未读消息计数-->\n                            <chat-contact :contact=\"contact\" :lastMessaged=\"chatLastMessaged(contact.id).time\" :unseenMsg=\"chatUnseenMessages(contact.id)\" :isActiveChatUser=\"isActiveChatUser(contact.id)\"></chat-contact>\n                        </li>\n                    </ul>\n                </div>\n\n                <!-- 联系人区 -->\n                <!-- CONTACTS LIST -->\n                <div class=\"chat__contacts\">\n                    <h3 class=\"text-primary mb-5 px-4\">联系人</h3>\n                    <ul class=\"chat__contacts bordered-items\">\n                        <li class=\"cursor-pointer\" v-for=\"contact in chatContacts\" :key=\"contact.id\" @click=\"updateActiveChatUser(contact.id)\">\n                            <chat-contact :contact=\"contact\"></chat-contact>\n                        </li>\n                    </ul>\n                </div>\n            </VuePerfectScrollbar>\n        </vs-sidebar>\n\n        <!-- 聊天区 -->\n        <div class=\"chat__bg app-fixed-height chat-content-area border border-solid d-theme-border-grey-light border-t-0 border-r-0 border-b-0\" :class=\"{'sidebar-spacer--wide': clickNotClose, 'flex items-center justify-center': activeChatUser === null}\">\n            <template v-if=\"activeChatUser\">\n                <div class=\"chat__navbar\">\n                    <chat-navbar :isSidebarCollapsed=\"!clickNotClose\" :user-id=\"activeChatUser\" :isPinnedProp=\"isChatPinned\" @openContactsSidebar=\"toggleChatSidebar(true)\" @showProfileSidebar=\"updateUserProfileId\" @toggleIsChatPinned=\"toggleIsChatPinned\"></chat-navbar>\n                </div>\n                <VuePerfectScrollbar class=\"chat-content-scroll-area border border-solid d-theme-border-grey-light\" :settings=\"settings\" ref=\"chatLogPS\">\n                    <div class=\"chat__log\" ref=\"chatLog\">\n                        <chat-log :userId=\"activeChatUser\" v-if=\"activeChatUser\"></chat-log>\n                    </div>\n                </VuePerfectScrollbar>\n                <div class=\"chat__input flex p-4 bg-white\">\n                    <vs-input class=\"flex-1\" placeholder=\"输入消息..\" v-model=\"typedMessage\" @keyup.enter=\"sendMsg\" />\n                    <vs-button class=\"bg-primary-gradient ml-4\" type=\"filled\" @click=\"sendMsg\">发送</vs-button>\n                </div>\n            </template>\n            <template v-else>\n                <div class=\"flex flex-col items-center\">\n                    <feather-icon icon=\"MessageSquareIcon\" class=\"mb-4 bg-white p-8 shadow-md rounded-full\" svgClasses=\"w-16 h-16\"></feather-icon>\n                    <h4 class=\" py-2 px-4 bg-white shadow-md rounded-full cursor-pointer\" @click.stop=\"toggleChatSidebar(true)\">开始聊天</h4>\n                </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport contacts from './contacts'\nimport ChatContact from \"./ChatContact.vue\"\nimport UserProfile from \"./UserProfile.vue\"\nimport ChatNavbar from './ChatNavbar.vue'\nimport ChatLog from './ChatLog.vue'\nimport { findContactsList } from '../../acl/api'\n\nexport default{\n    name: 'vx-sidebar',\n    data() {\n        return {\n            loginInfo: {\n                id: '',\n                email: '',\n                password: '',\n                avatar: ''\n            },\n            active: true,\n            isHidden: false,\n            contacts: contacts,\n            searchContact: \"\",\n            activeProfileSidebar: false,\n            activeChatUser: null,\n            userProfileId: -1,\n            typedMessage: \"\",\n            isChatPinned: false,\n            settings: {\n                maxScrollbarLength: 60,\n                wheelSpeed: 0.70,\n            },\n            clickNotClose: true,\n            isChatSidebarActive: true,\n            windowWidth: window.innerWidth,\n        }\n    },\n    computed: {\n        chatLastMessaged() {\n            return (userId) => this.$store.getters['chat/chatLastMessaged'](userId);\n        },\n        chatUnseenMessages() {\n            return (userId) => {\n                const unseenMsg = this.$store.getters['chat/chatUnseenMessages'](userId);\n                if(unseenMsg) return unseenMsg\n            };\n        },\n        sorted() {\n            return this.chats.slice().sort((x,y) => {\n                const xId = x.id;\n                const yId = y.id;\n                const chatDataX = this.$store.getters['chat/chatDataOfUser'](xId);\n                const chatDataY = this.$store.getters['chat/chatDataOfUser'](yId);\n                return (chatDataY.isPinned - chatDataX.isPinned)\n            })\n        },\n        activeUserId() {\n            return this.$store.state.AppActiveUser.id;\n        },\n        activeUserImg() {\n            return this.$store.state.AppActiveUser.img;\n        },\n        activeUserStatus() {\n            return this.$store.state.AppActiveUser.status;\n        },\n        getStatusColor() {\n            return (isActiveUser) => {\n                const userStatus = this.getUserStatus(isActiveUser)\n\n                if(userStatus == \"online\"){\n                    return \"success\"\n                }else if(userStatus == \"do not disturb\"){\n                    return \"danger\"\n                }else if(userStatus == \"away\"){\n                    return \"warning\"\n                }else{\n                    return \"grey\"\n                }\n            }\n        },\n        chats() {\n            return this.$store.getters['chat/chats'];\n        },\n        // 获得联系人列表\n        chatContacts() {\n            return this.contacts;\n\n        },\n        searchQuery: {\n            get() {\n                return this.$store.state.chat.chatSearchQuery;\n            },\n            set(val) {\n                this.$store.dispatch('chat/setChatSearchQuery', val);\n            }\n        },\n        isActiveChatUser() {\n            return (userId) => userId == this.activeChatUser\n        }\n    },\n    mounted () {\n       this.getValue()\n       this.getContactList()\n    },\n    methods: {\n        getContactList(){\n            findContactsList(this.loginInfo).then(data => {\n                this.contacts = data\n                console.log(data)\n            })\n        },\n        getValue(){\n            this.loginInfo.avatar = localStorage.getItem('avatar');\n        },\n        getUserStatus(isActiveUser) {\n            return (isActiveUser) ? this.$store.state.AppActiveUser.status : this.contacts[this.activeChatUser].status;\n        },\n        closeProfileSidebar(value) {\n            this.activeProfileSidebar = value\n        },\n        updateUserProfileId(userId) {\n            this.userProfileId = userId;\n            this.activeProfileSidebar = !this.activeProfileSidebar;\n        },\n        updateActiveChatUser(contactId) {\n            this.activeChatUser = contactId;\n            if(this.$store.getters['chat/chatDataOfUser'](this.activeChatUser)) {\n                this.$store.dispatch('chat/markSeenAllMessages', contactId)\n            }\n            let chatData = this.$store.getters['chat/chatDataOfUser'](this.activeChatUser);\n            if(chatData) this.isChatPinned = chatData.isPinned;\n            else this.isChatPinned = false\n            this.toggleChatSidebar();\n            this.typedMessage = '';\n        },\n        showProfileSidebar(userId) {\n            this.userProfileId = userId;\n            this.activeProfileSidebar = !this.activeProfileSidebar;\n        },\n        sendMsg() {\n            if(!this.typedMessage) return\n            const payload = {\n                isPinned: this.isChatPinned,\n                'msg': {\n                    'textContent': this.typedMessage,\n                    'time': String(new Date()),\n                    'isSent': true,\n                    'isSeen': false,\n                },\n                'id': this.activeChatUser\n            }\n            this.$store.dispatch('chat/sendChatMessage', payload)\n            this.typedMessage = '';\n            this.$refs.chatLogPS.$el.scrollTop = this.$refs.chatLog.scrollHeight;\n        },\n        toggleIsChatPinned(value) {\n            this.isChatPinned = value;\n        },\n        handleWindowResize(event) {\n            this.windowWidth = event.currentTarget.innerWidth;\n            this.setSidebarWidth();\n        },\n        setSidebarWidth() {\n            if(this.windowWidth < 1200) {\n                this.isChatSidebarActive = this.clickNotClose = false;\n            }else {\n                this.isChatSidebarActive = this.clickNotClose = true;\n            }\n        },\n        toggleChatSidebar(value = false) {\n            if(!value && this.clickNotClose) return\n            this.isChatSidebarActive = value;\n        }\n    },\n    components: {\n        VuePerfectScrollbar,\n        ChatContact,\n        UserProfile,\n        ChatNavbar,\n        ChatLog,\n    },\n    created() {\n        this.$nextTick(() => {\n            window.addEventListener('resize', this.handleWindowResize);\n        })\n        this.setSidebarWidth();\n    },\n    beforeDestroy: function () {\n        window.removeEventListener('resize', this.handleWindowResize)\n    },\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuesax/apps/chat.scss\";\n</style>\n"]}]}